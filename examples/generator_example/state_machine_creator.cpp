//////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                  //
// This file was generated by yasmine's ygen @ 2017/04/20 14:03:35.                                 //
//                                                                                                  //
//////////////////////////////////////////////////////////////////////////////////////////////////////

#include "state_machine_creator.hpp"
#include <iostream>

namespace examples 
{


state_machine_uptr create_state_machine(const std::string& _name, examples::logic& _logic )
{	
	state_machine_uptr the_state_machine = SX_MAKE_UNIQUE< sxy::sync_state_machine >( _name ); 
	
	// vertices {
	sxy::composite_state& root = the_state_machine->get_root_state();
	sxy::region& main_region = root.add_region("main_region");
	sxy::composite_state& State1 = main_region.add_composite_state("State1", Y_BEHAVIOR_METHOD2( &_logic, &logic::behavior_enter_state_1 ), Y_BEHAVIOR_METHOD2( &_logic, &logic::behavior_exit_state_1 ));
	sxy::region& region2S1 = State1.add_region("region2S1");
	sxy::simple_state& State4a = region2S1.add_simple_state("State4a", Y_BEHAVIOR_METHOD2( &_logic, &logic::behavior_do_state_4a ), Y_BEHAVIOR_METHOD2( &_logic, &logic::behavior_enter_state_4a ), Y_EMPTY_BEHAVIOR);
	sxy::simple_state& State4b = region2S1.add_simple_state("State4b", Y_BEHAVIOR_METHOD2( &_logic, &logic::behavior_do_state_4b ), Y_EMPTY_BEHAVIOR, Y_EMPTY_BEHAVIOR);
	sxy::region& region1S1 = State1.add_region("region1S1");
	sxy::simple_state& State2 = region1S1.add_simple_state("State2", Y_EMPTY_BEHAVIOR, Y_EMPTY_BEHAVIOR, Y_EMPTY_BEHAVIOR);
	sxy::simple_state& State3 = region1S1.add_simple_state("State3", Y_BEHAVIOR_FUNCTION2( behavior_do_state_3 ), Y_BEHAVIOR_FUNCTION2( logic::behavior_enter_state_3 ), Y_BEHAVIOR_METHOD2( &_logic, &logic::behavior_exit_state_3 ));
	sxy::initial_pseudostate& InitialS1r1 = region1S1.add_initial_pseudostate("InitialS1r1");
	sxy::composite_state& State5 = main_region.add_composite_state("State5", Y_BEHAVIOR_METHOD2( &_logic, &logic::behavior_enter_state_5 ), Y_BEHAVIOR_METHOD2( &_logic, &logic::behavior_exit_state_5 ));
	sxy::region& region1S5 = State5.add_region("region1S5");
	sxy::composite_state& State6 = region1S5.add_composite_state("State6", Y_EMPTY_BEHAVIOR, Y_EMPTY_BEHAVIOR);
	sxy::region& region1S6 = State6.add_region("region1S6");
	sxy::composite_state& State8 = region1S6.add_composite_state("State8", Y_BEHAVIOR_METHOD2( &_logic, &logic::behavior_enter_state_8 ), Y_BEHAVIOR_METHOD2( &_logic, &logic::behavior_exit_state_8 ));
	sxy::region& region1S8 = State8.add_region("region1S8");
	sxy::simple_state& State9 = region1S8.add_simple_state("State9", Y_BEHAVIOR_FUNCTION2( behavior_do_state_9 ), Y_EMPTY_BEHAVIOR, Y_EMPTY_BEHAVIOR);
	sxy::initial_pseudostate& InitialS8 = region1S8.add_initial_pseudostate("InitialS8");
	sxy::initial_pseudostate& InitialS6r1 = region1S6.add_initial_pseudostate("InitialS6r1");
	sxy::region& region2S6 = State6.add_region("region2S6");
	sxy::simple_state& State10 = region2S6.add_simple_state("State10", Y_EMPTY_BEHAVIOR, Y_EMPTY_BEHAVIOR, Y_EMPTY_BEHAVIOR);
	sxy::simple_state& State11 = region2S6.add_simple_state("State11", Y_BEHAVIOR_METHOD2( &_logic, &logic::behavior_do_state_11 ), Y_EMPTY_BEHAVIOR, Y_EMPTY_BEHAVIOR);
	sxy::simple_state& State12 = region2S6.add_simple_state("State12", Y_BEHAVIOR_METHOD2( &_logic, &logic::behavior_do_state_12 ), Y_EMPTY_BEHAVIOR, Y_EMPTY_BEHAVIOR);
	sxy::simple_state& State13 = region2S6.add_simple_state("State13", Y_BEHAVIOR_METHOD2( &_logic, &logic::behavior_do_state_13 ), Y_EMPTY_BEHAVIOR, Y_EMPTY_BEHAVIOR);
	sxy::initial_pseudostate& InitialS6r2 = region2S6.add_initial_pseudostate("InitialS6r2");
	sxy::region& region3S6 = State6.add_region("region3S6");
	sxy::simple_state& State14 = region3S6.add_simple_state("State14", Y_EMPTY_BEHAVIOR, Y_EMPTY_BEHAVIOR, Y_EMPTY_BEHAVIOR);
	sxy::initial_pseudostate& InitialS6r3 = region3S6.add_initial_pseudostate("InitialS6r3");
	sxy::simple_state& State7 = region1S5.add_simple_state("State7", Y_EMPTY_BEHAVIOR, Y_BEHAVIOR_FUNCTION2( logic::behavior_enter_state_7 ), Y_BEHAVIOR_FUNCTION2( logic::behavior_exit_state_7 ));
	sxy::initial_pseudostate& InitialS5 = region1S5.add_initial_pseudostate("InitialS5");
	sxy::initial_pseudostate& Initial = main_region.add_initial_pseudostate("Initial");
	sxy::terminate_pseudostate& Terminate = main_region.add_terminate_pseudostate("Terminate");
	sxy::join& Join1 = main_region.add_join("Join1");
	// } vertices


	// transitions {
	the_state_machine->add_transition({2}, State5, State1, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_EMPTY_BEHAVIOR);
	the_state_machine->add_transition(sxy::Y_COMPLETION_EVENT_ID, Initial, State1, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_BEHAVIOR_FUNCTION2( behavior_function_transition ));
	the_state_machine->add_transition(sxy::Y_COMPLETION_EVENT_ID, InitialS1r1, State2, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_EMPTY_BEHAVIOR);
	the_state_machine->add_transition({2}, State2, State3, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_EMPTY_BEHAVIOR);
	the_state_machine->add_transition({1}, State1, State4a, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_EMPTY_BEHAVIOR);
	the_state_machine->add_transition({2}, State4a, State4b, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_BEHAVIOR_FUNCTION2( logic::behavior_transition ));
	the_state_machine->add_transition(sxy::Y_COMPLETION_EVENT_ID, State3, Join1, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_EMPTY_BEHAVIOR);
	the_state_machine->add_transition(sxy::Y_COMPLETION_EVENT_ID, State4b, Join1, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_EMPTY_BEHAVIOR);
	the_state_machine->add_transition(sxy::Y_COMPLETION_EVENT_ID, Join1, State5, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_EMPTY_BEHAVIOR);
	the_state_machine->add_transition(sxy::Y_COMPLETION_EVENT_ID, InitialS6r1, State8, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_EMPTY_BEHAVIOR);
	the_state_machine->add_transition(sxy::Y_COMPLETION_EVENT_ID, InitialS8, State9, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_EMPTY_BEHAVIOR);
	the_state_machine->add_transition(sxy::Y_COMPLETION_EVENT_ID, InitialS6r2, State10, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_EMPTY_BEHAVIOR);
	the_state_machine->add_transition({3}, State10, State11, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_EMPTY_BEHAVIOR);
	the_state_machine->add_transition({4}, State10, State12, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_EMPTY_BEHAVIOR);
	the_state_machine->add_transition({5}, State10, State13, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_EMPTY_BEHAVIOR);
	the_state_machine->add_transition(sxy::Y_COMPLETION_EVENT_ID, InitialS6r3, State14, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_EMPTY_BEHAVIOR);
	the_state_machine->add_transition({6}, State6, State7, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_EMPTY_BEHAVIOR);
	the_state_machine->add_transition({7}, State5, Terminate, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_EMPTY_BEHAVIOR);
	the_state_machine->add_transition(sxy::Y_COMPLETION_EVENT_ID, InitialS5, State6, sxy::transition_kind::EXTERNAL, Y_EMPTY_GUARD, Y_EMPTY_BEHAVIOR);
	// } transitions

	return(sxe::move(the_state_machine));
}

}

